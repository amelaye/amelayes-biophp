# Learn more about services, parameters and containers at
# https://symfony.com/doc/current/service_container.html
imports:
    - {resource : inc/chemical.yml}
    - {resource : inc/codons.yml}
    - {resource : inc/alphabet.yml}
    - {resource : inc/triplets.yml}
    - {resource : inc/enzymes.yml}
parameters:
    pk_values:
        EMBOSS:
            N_terminus: 8.6
            K: 10.8
            R: 12.5
            H: 6.5
            C_terminus: 3.6
            D: 3.9
            E: 4.1
            C: 8.5
            Y: 10.1
        DTASelect:
            N_terminus: 8
            K: 10
            R: 12
            H: 6.5
            C_terminus: 3.1
            D: 4.4
            E: 4.4
            C: 8.5
            Y: 10
        Solomon:
            N_terminus: 9.6
            K: 10.5
            R: 125
            H: 6.0
            C_terminus: 2.4
            D: 3.9
            E: 4.3
            C: 8.3
            Y: 10.1
    dna_complements:
        A: T
        T: A
        G: C
        C: G
    rna_complements:
        A: U
        U: A
        G: C
        C: G
    chemical_groups:
        'S': 'H'
        'T': 'H'
        'N': 'M'
        'Q': 'M'
        'C': 'S'
        'M': 'S'
        'P': 'I'
        'D': 'A'
        'E': 'A'
        'K': 'C'
        'R': 'C'
        'H': 'C'
        '*': '*'
        'X': 'X'

services:
    # default configuration for services in *this* file
    _defaults:
        # automatically injects dependencies in your services
        autowire: false
        # automatically registers your services as commands, event subscribers, etc.
        autoconfigure: true
        # this means you cannot fetch services directly from the container via $container->get()
        # if you need to do this, you can override this setting on individual services
        public: false

    # makes classes in src/AppBundle available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    AppBundle\:
        resource: '../../src/AppBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/AppBundle/{Entity,Repository,Tests}'

    MinitoolsBundle\:
        resource: '../../src/MinitoolsBundle/*'
        # you can exclude directories or files
        # but if a service is unused, it's removed anyway
        exclude: '../../src/MinitoolsBundle/{Entity,Repository,Tests,Legacy}'

    # controllers are imported separately to make sure they're public
    # and have a tag that allows actions to type-hint services
    AppBundle\Controller\:
        resource: '../../src/AppBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    AppBundle\Service\ParseGenbankManager:
        arguments: []
    
    AppBundle\Service\ParseSwissprotManager:
        arguments: []
    
    AppBundle\Service\DatabaseManager:
        arguments:
            - '@AppBundle\Service\ParseGenbankManager'
            - '@AppBundle\Service\ParseSwissprotManager'

    AppBundle\Service\ProteinManager:
        arguments: 
            - '@AppBundle\Entity\Protein'
            - "%wts%"
    
    AppBundle\Service\RestrictionEnzymeManager:
        arguments:
            - '@AppBundle\Entity\RestrictionEnzyme'

    AppBundle\Service\SequenceManager:
        arguments:
            - "%dna_complements%"
            - "%rna_complements%"
            - "%elements%"
            - "%chemical_groups%"
            - "%codons%"

    AppBundle\Service\SeqAlignManager:
        arguments:
            - "%alphabet%"

    MinitoolsBundle\Controller\:
        resource: '../../src/MinitoolsBundle/Controller'
        public: true
        tags: ['controller.service_arguments']

    MinitoolsBundle\Service\DnaToProteinManager:
        arguments:
            - "%codons%"
            - "%triplets%"
            - "%triplets_combinations%"

    MinitoolsBundle\Service\ProteinPropertiesnManager:
        arguments:
            - "%codons%"
            - "%triplets%"
            - "%triplets_combinations%"

    MinitoolsBundle\Listener\DnaToProteinListener:
        arguments:
            - '@MinitoolsBundle\Service\DnaToProteinManager'
